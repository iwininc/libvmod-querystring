# libvmod-querystring - querystring manipulation module for Varnish
#
# Copyright (C) 2016, Dridi Boukelmoune <dridi.boukelmoune@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above
#    copyright notice, this list of conditions and the following
#    disclaimer.
# 2. Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.

varnishtest "Filter empty or NULL strings"

server s1 "" -start

varnish v1 -vcl+backend {
	import ${vmod_querystring};

	sub vcl_init {
		new noop = querystring.filter();
	}

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		set resp.http.Filtered-URL = noop.apply(req.http.url);
		set resp.http.Extracted-URL = noop.extract(req.http.url);
		set resp.http.Removed-URL = querystring.remove(req.http.url);
	}
} -start

client c1 {
	txreq -hdr "url:?"
	rxresp
	expect resp.http.Filtered-URL == ""
	expect resp.http.Extracted-URL == ""
	expect resp.http.Removed-URL == ""

	txreq -hdr "url:"
	rxresp
	expect resp.http.Filtered-URL == ""
	expect resp.http.Extracted-URL == ""
	expect resp.http.Removed-URL == ""

	txreq
	rxresp
	expect resp.http.Filtered-URL == ""
	expect resp.http.Extracted-URL == ""
	expect resp.http.Removed-URL == ""
} -run
